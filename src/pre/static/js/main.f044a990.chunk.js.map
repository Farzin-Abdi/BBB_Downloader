{"version":3,"sources":["utils/logger.js","utils/data.js","components/error.js","components/utils/button/index.js","components/utils/modal/index.js","components/about/index.js","components/utils/avatar/index.js","components/chat/message.js","components/chat/index.js","components/notes/index.js","components/presentation/cursor.js","components/presentation/slide.js","components/presentation/canvas.js","components/presentation/index.js","components/thumbnails/index.js","components/search/index.js","components/screenshare/index.js","components/talkers/index.js","components/video/index.js","components/bars/bottom.js","components/bars/top.js","utils/builder.js","utils/monitor.js","utils/shortcuts.js","utils/synchronizer.js","components/player.js","components/loader.js","locales/messages/index.js","locales/index.js","index.js"],"names":["params","URLSearchParams","window","location","search","debug","has","logger","info","console","warn","error","LAYOUT","ID","NUMBERS","buildFileURL","recordId","file","getAvatarStyle","name","index","stringHash","length","getControlFromLayout","layout","control","getCurrentDataIndex","data","time","isEmpty","start","stop","middle","Math","floor","isCurrent","item","hasProperty","isVisible","timestamp","getData","id","config","files","getFileName","canvases","slides","thumbnails","split","shift","getFileType","pop","getSectionFromLayout","section","getSwapFromLayout","swap","hasIndex","hasPresentation","i","src","includes","object","property","hasOwnProperty","isActive","clear","cleared","wasCleared","visible","isContentVisible","current","next","isArray","isValid","isString","isEnabled","isEqual","first","second","type","equal","every","value","valid","Array","parseTimeToSeconds","patterns","match","hours","minutes","seconds","timeToSeconds","h","parseInt","m","s","seek","player","video","max","duration","currentTime","skip","change","intlMessages","defineMessages","aria","description","Error","props","code","intl","aria-label","formatMessage","className","defaultProps","active","circle","disabled","Button","this","handleOnClick","icon","ghost","solid","style","default","cx","onClick","PureComponent","close","More","children","onClose","BUILD","process","REACT_APP_BBB_PLAYBACK_BUILD","About","key","element","green","red","metadata","content","captions","chat","notes","presentation","screenshare","renderItem","participants","end","subtitle","push","Date","day","month","year","map","toggleModal","renderHeader","renderBody","renderFooter","Avatar","initials","Message","nextProps","inactive","onKeyPress","e","tabIndex","text","options","hyperlink","milliseconds","getTimestampAsMilliseconds","hourCycle","hour","minute","timeZone","renderHyperlink","renderAvatar","renderContent","Component","Chat","handleAutoScroll","currentDataIndex","scroll","firstNode","currentNode","parentNode","scrollTop","align","clientHeight","offsetTop","spacing","parentHeight","verticalOffset","getScrollTop","node","message","ref","setRef","aria-live","renderMessages","Notes","dangerouslySetInnerHTML","__html","Cursor","x","y","cy","Slide","height","width","thumbnail","find","alt","logo","slide","getProxy","href","Canvas","points","x1","y1","x2","y2","d","r","xmlns","line","image","rect","fill","stroke","strokeWidth","transform","drawsInterval","draws","canvas","shape","j","intermediate","renderPoll","renderPolyline","renderLine","renderPolygon","renderPath","renderCircle","renderText","renderCanvas","Presentation","currentSlideIndex","currentPanzoomIndex","panzooms","currentData","viewBox","currentCursorIndex","cursor","slideId","getSlideId","getViewBox","getCursor","canvasId","buildViewBoxAttr","xmlnsXlink","clipPath","Thumbnails","scrollLeft","clientWidth","offsetLeft","parentWidth","horizontalOffset","getScrollLeft","interactive","renderImage","styles","reduce","result","isFiltered","renderThumbnail","handleSearch","renderThumbnails","renderClearButton","Search","state","event","target","min","setState","toLowerCase","forEach","indexOf","maxLength","minLength","onChange","handleOnChange","Screenshare","media","sources","filter","controls","videojs","onPlayerReady","dispose","data-vjs-player","playsInline","preload","Talkers","talkers","talker","renderTalkers","Video","tracks","lang","locale","localeName","kind","srclang","label","controlBar","fullscreenToggle","pictureInPictureToggle","volumePanel","inline","vertical","inactivityTimeout","playbackRates","rates","onTimeUpdate","on","setInterval","fps","clearInterval","about","TopBar","enabled","toggleSearch","toggleSection","toggleSwap","date","toggleAbout","single","renderSectionButton","renderTitle","renderSearchButton","renderSwapButton","getAttr","attr","getChildren","getId","getNumbers","trimmed","trim","replace","v","parseFloat","buildCanvases","group","canvasAttr","g","drawAttr","undo","items","buildStyle","drawId","Object","assign","polyline","polygon","path","switch","foreignObject","child","grandchildren","grandchild","join","parseText","buildShapes","svg","img","in","sort","a","b","buildSlides","build","filename","Promise","resolve","reject","fileType","alternates","buildAlternates","buildCaptions","buildNotes","shapes","explicitChildren","preserveChildrenOrder","charsAsChildren","getOptions","parseStringPromise","then","popcorn","chattimeline","out","decodeXML","clearHyperlink","slice","getInitials","buildChat","recording","position","buildCursor","meeting","meta","end_time","start_time","buildMetadata","panzoom","viewbox","buildPanzooms","start_timestamp","stop_timestamp","buildScreenshare","catch","Monitor","interval","url","JSON","stringify","request","send","fetch","method","headers","body","buildBody","Shortcuts","actions","init","prop","listeners","add","p","k","action","listener","document","addEventListener","altKey","shiftKey","removeEventListener","STATUSES","EVENTS","Synchronizer","primary","secondary","status","synching","play","pause","playbackRate","fullscreen","restore","Player","application","modal","initData","handlePlayerReady","bind","handleTimeUpdate","initMonitor","initShortcuts","shortcuts","destroy","found","synchronizer","monitor","collect","toggleFullscreen","toggleThumbnails","previous","backward","forward","open","renderFullscreenButton","toggleApplication","currentChatIndex","renderApplicationIcon","renderApplicationContent","getDraws","currentDrawsInterval","currentDataInterval","getCurrentDataInterval","SCREENSHARE","PRESENTATION","getActiveContent","bottom","renderPresentation","renderScreenshare","renderTopBar","renderMedia","renderApplication","renderBottomBar","renderModal","Loader","counter","l","qs","parse","ignoreQueryPrefix","getLayout","t","getTime","loaded","fetchFile","fetchMedia","response","ok","json","update","fetches","medias","all","responses","endsWith","keys","injectIntl","ar","de","en","es","fr","it","ja","pt","ru","RTL_LOCALES","navigator","language","setAttribute","setDirection","messages","getLocale","get","getStyle","ReactDOM","render","rel","getElementById"],"mappings":"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","file":"static/js/main.f044a990.chunk.js","sourcesContent":["const params = new URLSearchParams(window.location.search);\nconst debug = params ? params.has('debug') : false;\n\nconst logger = {\n  info: (...msg) => console.info(...msg),\n  debug: (...msg) => debug ? console.debug(...msg) : null,\n  warn: (...msg) => debug ? console.warn(...msg) : null,\n  error: (...msg) => console.error(...msg),\n};\n\nexport default logger;\n","import config from 'config';\nimport qs from 'qs';\nimport stringHash from 'string-hash';\nimport logger from './logger';\n\nconst LAYOUT = {\n  CONTENT: 'content',\n  DISABLED: 'disabled',\n  MEDIA: 'media',\n};\n\nconst LOCAL = process.env.REACT_APP_NO_ROUTER;\n\nconst ID = {\n  ABOUT: 'about',\n  ALTERNATES: 'alternates',\n  CAPTIONS: 'captions',\n  CHAT: 'chat',\n  CURSOR: 'cursor',\n  ERROR: 'error',\n  LOADER: 'loader',\n  METADATA: 'metadata',\n  NOTES: 'notes',\n  PANZOOMS: 'panzooms',\n  PLAYER: 'player',\n  PRESENTATION: 'presentation',\n  SCREENSHARE: 'screenshare',\n  SEARCH: 'search',\n  SHAPES: 'shapes',\n  TALKERS: 'talkers',\n  THUMBNAILS: 'thumbnails',\n  VIDEO: 'video',\n};\n\nconst NUMBERS = [\n  'zero', 'one', 'two', 'three',\n  'four', 'five', 'six', 'seven',\n  'eight', 'nine', 'ten', 'eleven',\n  'twelve', 'thirteen', 'fourteen', 'fifteen',\n];\n\nconst buildFileURL = (recordId, file) => {\n  if (LOCAL) return file;\n\n  return `/presentation/${recordId}/${file}`;\n};\n\nconst getAvatarStyle = name => {\n  const index = stringHash(name) % NUMBERS.length;\n\n  return `avatar-${NUMBERS[index]}`;\n};\n\nconst getActiveContent = (screenshare, time) => {\n  const {\n    SCREENSHARE,\n    PRESENTATION,\n  } = ID;\n\n  const content = isEnabled(screenshare, time) ? SCREENSHARE : PRESENTATION;\n\n  return content;\n};\n\nconst getControlFromLayout = layout => {\n  const { DISABLED } = LAYOUT;\n  let control = true;\n  switch (layout) {\n    case DISABLED:\n      control = false;\n      break;\n    default:\n  }\n\n  return control;\n};\n\nconst getCurrentDataIndex = (data, time) => {\n  if (isEmpty(data)) return -1;\n\n  let start = 0;\n  let stop = data.length - 1;\n  let middle = Math.floor((start + stop) / 2);\n\n  while (!isCurrent(data, middle, time) && start < stop) {\n    const item = data[middle];\n    if (!hasProperty(item, 'timestamp')) return -1;\n\n    if (!isVisible(time, item.timestamp)) {\n      stop = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n\n    middle = Math.floor((start + stop) / 2);\n  }\n\n  const current = isCurrent(data, middle, time);\n\n  return (!current) ? -1 : middle;\n};\n\nconst getCurrentDataInterval = (data, time) => {\n  const currentDataInterval = [];\n\n  if (isEmpty(data)) return currentDataInterval;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      if (!isVisible(time, timestamp)) break;\n\n      currentDataInterval.push(!wasCleared(time, clear));\n    }\n  }\n\n  return currentDataInterval;\n};\n\nconst getData = (data, id) => {\n  const file = config.files.data[id];\n\n  switch (id) {\n    case ID.ALTERNATES:\n    case ID.CAPTIONS:\n    case ID.CHAT:\n    case ID.CURSOR:\n    case ID.NOTES:\n    case ID.PANZOOMS:\n    case ID.SCREENSHARE:\n    case ID.TALKERS:\n      if (!file || data[getFileName(file)] === null) {\n        return [];\n      }\n\n      return data[getFileName(file)];\n    case ID.METADATA:\n      if (!file || data[getFileName(file)] === null) {\n        logger.error('missing', id);\n        return {};\n      }\n\n      return data[getFileName(file)];\n    case ID.SHAPES:\n      if (!file || data[getFileName(file)] === null) {\n        return {\n          canvases: [],\n          slides: [],\n          thumbnails: [],\n        };\n      }\n\n      return data[getFileName(file)];\n    default:\n      logger.debug('unhandled', id);\n      return [];\n  }\n};\n\nconst getDraws = (index, slides, canvases) => {\n  if (!hasIndex(index, slides)) return [];\n\n  const slide = slides[index];\n\n  if (isEmpty(canvases)) return [];\n\n  const canvas = canvases.find(canvas => slide.id === canvas.id);\n\n  if (!canvas) return [];\n\n  const { draws } = canvas;\n\n  return draws;\n};\n\nconst getFileName = file => file.split('.').shift();\n\nconst getFileType = file => file.split('.').pop();\n\nconst getLayout = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { l } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (l) return l;\n    }\n  }\n\n  return null;\n};\n\nconst getRecordId = match => {\n  if (LOCAL) return 'local';\n\n  if (match) {\n    const { params } = match;\n    if (params && params.recordId) {\n      const { recordId } = params;\n      const regex = /^[a-z0-9]{40}-[0-9]{13}$/;\n\n      if (recordId.match(regex)) return recordId;\n    }\n  }\n\n  logger.error('missing', 'recordId');\n\n  return null;\n};\n\nconst getSectionFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let section = true;\n  switch (layout) {\n    case CONTENT:\n      section = false;\n      break;\n    case MEDIA:\n      section = false;\n      break;\n    default:\n  }\n\n  return section;\n};\n\nconst getSwapFromLayout = layout => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let swap = false;\n  switch (layout) {\n    case CONTENT:\n      swap = false;\n      break;\n    case MEDIA:\n      swap = true;\n      break;\n    default:\n  }\n\n  return swap;\n};\n\nconst getScrollLeft = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientWidth,\n    offsetLeft,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetLeft;\n  const parentWidth = parentNode.clientWidth;\n\n  let horizontalOffset = 0;\n  switch (align) {\n    case 'left':\n      horizontalOffset = offsetLeft - spacing;\n      break;\n    case 'center':\n      horizontalOffset = parseInt(offsetLeft + (clientWidth - spacing - parentWidth) / 2, 10);\n      break;\n    case 'right':\n      horizontalOffset = offsetLeft + clientWidth - parentWidth;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return horizontalOffset;\n};\n\nconst getScrollTop = (firstNode, currentNode, align) => {\n  if (!currentNode) return 0;\n\n  const {\n    clientHeight,\n    offsetTop,\n    parentNode,\n  } = currentNode;\n\n  if (!firstNode || !parentNode) return 0;\n\n  const spacing = firstNode.offsetTop;\n  const parentHeight = parentNode.clientHeight;\n\n  let verticalOffset = 0;\n  switch (align) {\n    case 'top':\n      verticalOffset = offsetTop - spacing;\n      break;\n    case 'middle':\n      verticalOffset = parseInt(offsetTop + (clientHeight - spacing - parentHeight) / 2, 10);\n      break;\n    case 'bottom':\n      verticalOffset = offsetTop + clientHeight - parentHeight;\n      break;\n    default:\n      logger.debug('unhandled', align);\n  }\n\n  return verticalOffset;\n};\n\nconst getStyle = () => {\n  const params = new URLSearchParams(window.location.search);\n  const { styles } = config;\n  const { url } = styles;\n\n  let style = styles.default ? `${url}/${styles.default}.css` : null;\n  if (params && params.has('s')) {\n    const { valid } = styles;\n    const value = params.get('s');\n    if (valid.includes(value)) {\n      style = `${url}/${value}.css`;\n    }\n  }\n\n  return style;\n};\n\nconst getTime = location => {\n  if (location) {\n    const { search } = location;\n    if (search) {\n      const { t } = qs.parse(search, { ignoreQueryPrefix: true });\n\n      if (t) return parseTimeToSeconds(t);\n    }\n  }\n\n  return null;\n};\n\nconst getTimestampAsMilliseconds = timestamp => timestamp * 1000;\n\nconst hasIndex = (index, data) => {\n  if (index < 0) return false;\n\n  if (isEmpty(data)) return false;\n\n  if (index >= data.length) {\n    logger.error('out of bounds', index, data);\n\n    return false;\n  }\n\n  return true;\n};\n\nconst hasPresentation = slides => {\n  if (isEmpty(slides)) return false;\n\n  for (let i = 0; i < slides.length; i++) {\n    const { src } = slides[i];\n\n    if (src.includes('slide')) return true;\n  }\n\n  return false;\n};\n\nconst hasProperty = (object, property) => {\n  if (object && object.hasOwnProperty(property)) {\n    if (typeof object[property] !== 'undefined') return true;\n  }\n\n  logger.warn('missing', property, object);\n\n  return false;\n};\n\nconst isActive = (time, timestamp, clear = -1) => {\n  const cleared = wasCleared(time, clear);\n  const visible = isVisible(time, timestamp);\n\n  return visible && !cleared;\n};\n\nconst isContentVisible = (layout, swap) => {\n  const {\n    CONTENT,\n    MEDIA,\n  } = LAYOUT;\n\n  let visible;\n  switch (layout) {\n    case  CONTENT:\n      visible = !swap;\n      break;\n    case MEDIA:\n      visible = swap;\n      break;\n    default:\n      visible = false;\n  }\n\n  return visible;\n};\n\nconst isCurrent = (data, index, time) => {\n  if (!hasIndex(index, data)) return false;\n\n  const item = data[index];\n  if (!hasProperty(item, 'timestamp')) return false;\n\n  let current = false;\n  if (isVisible(time, item.timestamp)) {\n    if (index + 1 < data.length) {\n      const next = data[index + 1];\n      if (hasProperty(next, 'timestamp')) {\n        current = !isVisible(time, next.timestamp);\n      }\n    } else {\n      current = true;\n    }\n  }\n\n  return current;\n};\n\nconst isEmpty = data => {\n  const isArray = isValid('array', data);\n  const isString = isValid('string', data);\n  if (!isArray && !isString) return true;\n\n  const empty = data.length === 0;\n\n  return empty;\n};\n\nconst isEnabled = (data, time) => {\n  if (isEmpty(data)) return false;\n\n  for (let index = 0; index < data.length; index++) {\n    const item = data[index];\n    if (hasProperty(item, 'timestamp') && hasProperty(item, 'clear')) {\n      const {\n        clear,\n        timestamp,\n      } = item;\n\n      // Check if it was activated and did not ended\n      if (isActive(time, timestamp, clear)) return true;\n\n      // Check if we are searching over the present time value\n      if (!isVisible(time, timestamp)) return false;\n    } else {\n      // Invalid item\n      return false;\n    }\n  }\n\n  return false;\n};\n\nconst isEqual = (first, second, type) => {\n  let equal = false;\n\n  switch (type) {\n    case 'array':\n      if (first.length === second.length) {\n        equal = first.every((value, index) => value === second[index])\n      }\n\n      return equal;\n    default:\n      return equal;\n  }\n};\n\nconst isValid = (type, data) => {\n  let valid = false;\n\n  switch (type) {\n    case 'array':\n      if (Array.isArray(data)) valid = true;\n      break;\n    case 'string':\n      if (typeof data === type) valid = true;\n      break;\n    default:\n      logger.debug('unhandled', type);\n  }\n\n  return valid;\n};\n\nconst isVisible = (time, timestamp) => timestamp <= time;\n\nconst parseTimeToSeconds = time => {\n  const patterns = [\n    /^(\\d+)h(\\d+)m(\\d+)s$/,\n    /^(\\d+)m(\\d+)s$/,\n    /^(\\d+)s$/,\n  ];\n\n  for (let i = 0; i < patterns.length; i++) {\n    if (time.match(patterns[i])) {\n      const hours = time.match(/(\\d+)h/);\n      const minutes = time.match(/(\\d+)m/);\n      const seconds = time.match(/(\\d+)s/);\n\n      let timeToSeconds = 0;\n\n      if (hours) {\n        const h = parseInt(hours[1]);\n        if (h >= 0) timeToSeconds += h * 3600;\n      }\n\n      if (minutes) {\n        const m = parseInt(minutes[1]);\n        if (m >= 0 && m < 60) {\n          timeToSeconds += m * 60;\n        } else {\n          return null;\n        }\n      }\n\n      if (seconds) {\n        const s = parseInt(seconds[1]);\n        if (s >= 0 && s < 60) {\n          timeToSeconds += s;\n        } else {\n          return null;\n        }\n      }\n\n      return timeToSeconds;\n    }\n  }\n\n  return null;\n};\n\nconst search = (text, thumbnails) => {\n  const result = [];\n\n  const value = text.toLowerCase();\n  thumbnails.forEach((thumbnail, index) => {\n    const { alt } = thumbnail;\n\n    if (alt.toLowerCase().indexOf(value) !== -1) {\n      result.push(index);\n    }\n  });\n\n  return result;\n};\n\nconst seek = (player, seconds) => {\n  if (player.video) {\n    const min = 0;\n    const max = player.video.duration();\n    const time = player.video.currentTime() + seconds;\n\n    if (time < min) {\n      player.video.currentTime(min);\n    } else if (time > max) {\n      player.video.currentTime(max);\n    } else {\n      player.video.currentTime(time);\n    }\n  }\n};\n\nconst skip = (player, data, change) => {\n  const min = 0;\n  const max = data.length - 1;\n  const time = player.video.currentTime();\n\n  const current = getCurrentDataIndex(data, time);\n  if (current === -1) return null;\n\n  const index = current + change;\n\n  let timestamp;\n  if (index < min) {\n    timestamp = data[min].timestamp;\n  } else if (index > max) {\n    timestamp = data[max].timestamp;\n  } else {\n    timestamp = data[index].timestamp;\n  }\n\n  if (typeof timestamp !== 'undefined') {\n    player.video.currentTime(timestamp);\n  }\n};\n\nconst wasCleared = (time, clear) => clear !== -1 && clear <= time;\n\nexport {\n  LAYOUT,\n  LOCAL,\n  ID,\n  buildFileURL,\n  getAvatarStyle,\n  getActiveContent,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getFileName,\n  getFileType,\n  getLayout,\n  getRecordId,\n  getScrollLeft,\n  getScrollTop,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  getStyle,\n  getTime,\n  getTimestampAsMilliseconds,\n  hasPresentation,\n  hasProperty,\n  isActive,\n  isContentVisible,\n  isEmpty,\n  isEnabled,\n  isEqual,\n  isValid,\n  parseTimeToSeconds,\n  search,\n  seek,\n  skip,\n};\n","import React from 'react';\nimport { defineMessages } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'error.wrapper.aria',\n    description: 'Aria label for the error wrapper',\n  },\n});\n\nexport default function Error(props) {\n  const {\n    code,\n    intl,\n  } = props;\n\n  return (\n    <div\n      aria-label={intl.formatMessage(intlMessages.aria)}\n      className=\"error-wrapper\"\n      id={ID.ERROR}\n    >\n      <div className=\"error-code\">\n        {code}\n      </div>\n    </div>\n  );\n}\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport './index.scss';\n\nconst DEFAULT = 'default';\nconst GHOST = 'ghost';\nconst SOLID = 'solid';\n\nconst propTypes = {\n  active: PropTypes.bool,\n  aria: PropTypes.string,\n  circle: PropTypes.bool,\n  disabled: PropTypes.bool,\n  handleOnClick: PropTypes.func,\n  icon: PropTypes.string,\n  type: PropTypes.string,\n};\n\nconst defaultProps = {\n  active: false,\n  circle: false,\n  disabled: false,\n  type: DEFAULT,\n};\n\nclass Button extends PureComponent {\n  render() {\n    const {\n      active,\n      aria,\n      circle,\n      disabled,\n      handleOnClick,\n      icon,\n      type,\n    } = this.props;\n\n    if (!handleOnClick) return null;\n\n    const ghost = type === GHOST;\n    const solid = type === SOLID;\n\n    const style = {\n      default: !ghost && !solid && !disabled,\n      ghost: ghost && !active && !disabled,\n      solid: (solid || active) && !disabled,\n      circle,\n      disabled,\n    };\n\n    return (\n      <div className=\"button-wrapper\">\n        <button\n          aria-label={aria}\n          className={cx('button', style)}\n          disabled={disabled}\n          onClick={() => handleOnClick()}\n        >\n          <span className={`icon-${icon}`} />\n        </button>\n      </div>\n    );\n  };\n}\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\n\nexport default Button;\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  close: {\n    id: 'button.close.aria',\n    description: 'Aria label for the close button',\n  },\n});\n\nexport default class More extends PureComponent {\n  render() {\n    const {\n      children,\n      intl,\n      onClose,\n    } = this.props;\n\n    return (\n      <div className=\"modal-wrapper\">\n        <div className=\"modal\">\n          <div className=\"modal-control\">\n            <Button\n              aria={intl.formatMessage(intlMessages.close)}\n              circle\n              handleOnClick={onClose}\n              icon=\"close\"\n            />\n          </div>\n          <div className=\"modal-content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  FormattedDate,\n  FormattedTime,\n} from 'react-intl';\nimport cx from 'classnames';\nimport Modal from 'components/utils/modal';\nimport './index.scss';\n\nconst BUILD = process.env.REACT_APP_BBB_PLAYBACK_BUILD;\n\nexport default class About extends PureComponent {\n  renderItem(key, value) {\n    let element;\n    if (typeof value === 'boolean') {\n      const icon = value ? 'icon-check' : 'icon-close';\n      element = <div className={cx(icon, { green: value, red: !value})} />;\n    } else {\n      element = value;\n    }\n\n    return (\n      <div className=\"item\">\n        <div className={`icon-${key}`} />\n        <div className=\"value\">\n          {element}\n        </div>\n      </div>\n    );\n  }\n\n  renderBody(metadata) {\n    const { content } = this.props;\n\n    const {\n      captions,\n      chat,\n      notes,\n      presentation,\n      screenshare,\n    } = content;\n\n    return (\n      <div className=\"about-body\">\n        {this.renderItem('users', metadata.participants)}\n        {this.renderItem('presentation', presentation)}\n        {this.renderItem('chat', chat)}\n        {this.renderItem('notes', notes)}\n        {this.renderItem('screenshare', screenshare)}\n        {this.renderItem('captions', captions)}\n      </div>\n    );\n  }\n\n  renderHeader(metadata) {\n    const {\n      end,\n      name,\n      start,\n    } = metadata;\n\n    const subtitle = [];\n    subtitle.push(\n      <FormattedDate\n        value={new Date(start)}\n        day=\"numeric\"\n        month=\"long\"\n        year=\"numeric\"\n      />\n    );\n\n    subtitle.push(<FormattedTime value={new Date(start)} />);\n    subtitle.push(<FormattedTime value={new Date(end)} />);\n\n    return (\n      <div className=\"about-header\">\n        <div className=\"title\">\n          {name}\n        </div>\n        <div className=\"subtitle\">\n          {subtitle.map(s => <div className=\"item\">{s}</div>)}\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    return (\n      <div className=\"about-footer\">\n        {BUILD ? this.renderItem('settings', BUILD) : null}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      metadata,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderHeader(metadata)}\n        {this.renderBody(metadata)}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React from 'react';\nimport cx from 'classnames';\nimport { getAvatarStyle } from 'utils/data';\nimport './index.scss';\n\nconst Avatar = (props) => {\n  const {\n    initials,\n    name,\n  } = props;\n\n  return (\n    <div className=\"avatar-wrapper\">\n      <div className={cx('avatar', getAvatarStyle(name))}>\n        <span className=\"initials\">\n          {initials}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React, { Component } from 'react';\nimport { FormattedTime } from 'react-intl';\nimport Linkify from 'linkifyjs/react';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport { getTimestampAsMilliseconds } from 'utils/data';\nimport './index.scss';\n\nexport default class Message extends Component {\n  shouldComponentUpdate(nextProps) {\n    const { active } = this.props;\n\n    if (active !== nextProps.active) return true;\n\n    return false;\n  }\n\n  renderAvatar(active, name) {\n    const {\n      initials,\n      onClick,\n    } = this.props;\n\n    return (\n      <div\n        className={cx('interactive', { inactive: !active })}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        tabIndex=\"0\"\n      >\n        <Avatar\n          active={active}\n          initials={initials}\n          name={name}\n        />\n      </div>\n    );\n  }\n\n  renderHyperlink(active, text) {\n    const options = {\n      className: cx('linkified', { inactive: !active }),\n    };\n\n    return (\n      <Linkify options={options}>\n        {text}\n      </Linkify>\n    );\n  }\n\n  renderContent(active, name) {\n    const {\n      hyperlink,\n      text,\n      timestamp,\n    } = this.props;\n\n    const milliseconds = getTimestampAsMilliseconds(timestamp);\n\n    return (\n      <div className=\"data\">\n        <div className=\"info\">\n          <div className={cx('name', { inactive: !active })}>\n            {name}\n          </div>\n          <div className={cx('time', { inactive: !active })}>\n            <FormattedTime\n              hourCycle=\"h23\"\n              hour=\"numeric\"\n              minute=\"numeric\"\n              second=\"numeric\"\n              timeZone=\"UTC\"\n              value={milliseconds}\n            />\n          </div>\n        </div>\n        <div className={cx('text', { inactive: !active })}>\n          {hyperlink ? this.renderHyperlink(active, text) : text}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      active,\n      name,\n    } = this.props;\n\n    return (\n      <div className=\"message\">\n        {this.renderAvatar(active, name)}\n        {this.renderContent(active, name)}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { chat as config } from 'config';\nimport Message from './message';\nimport {\n  ID,\n  getScrollTop,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.chat.wrapper.aria',\n    description: 'Aria label for the chat wrapper',\n  },\n});\n\nexport default class Chat extends Component {\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { currentDataIndex } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollTop = getScrollTop(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  renderMessages() {\n    const {\n      chat,\n      currentDataIndex,\n    } = this.props;\n\n    return chat.map((item, index) => {\n      const {\n        hyperlink,\n        initials,\n        message,\n        name,\n        timestamp,\n      } = item;\n\n      const active = index <= currentDataIndex;\n\n      return (\n        <span ref={node => this.setRef(node, index)}>\n          <Message\n            active={active}\n            hyperlink={hyperlink}\n            initials={initials}\n            name={name}\n            onClick={() => this.handleOnClick(timestamp)}\n            text={message}\n            timestamp={timestamp}\n          />\n        </span>\n      );\n    });\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        aria-live=\"polite\"\n        className=\"chat-wrapper\"\n        id={ID.CHAT}\n        tabIndex=\"0\"\n      >\n        <div className=\"list\">\n          <div className=\"message-wrapper\">\n            {this.renderMessages()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.notes.wrapper.aria',\n    description: 'Aria label for the notes wrapper',\n  },\n});\n\nexport default class Notes extends PureComponent {\n  render() {\n    const {\n      intl,\n      notes,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"notes-wrapper\"\n        id={ID.NOTES}\n        tabIndex=\"0\"\n      >\n        <div className=\"notes\">\n          <div dangerouslySetInnerHTML={{ __html: notes }} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport './index.scss';\n\nexport default class Cursor extends PureComponent {\n  render() {\n    const {\n      x,\n      y,\n    } = this.props;\n\n    if (x === -1 || y === -1) return null;\n\n    return (\n      <circle\n        className=\"cursor\"\n        style={{ cx: x, cy: y }}\n      />\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nexport default class Slide extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  getProxy(id, height, width) {\n    const { thumbnails } = this.props;\n\n    const thumbnail = thumbnails.find(thumbnails => id === thumbnails.id);\n    if (!thumbnail) return null;\n\n    const {\n      alt,\n      src,\n    } = thumbnail;\n\n    if (src === SCREENSHARE) return null;\n\n    const logo = src.includes('logo');\n\n    return (\n      <foreignObject\n        height={height}\n        x={0}\n        width={width}\n        y={0}\n      >\n        <img\n          alt={alt}\n          className={cx('proxy', { logo })}\n          src={buildFileURL(this.recordId, src)}\n        />\n      </foreignObject>\n    );\n  }\n\n  render() {\n    const {\n      id,\n      slides,\n    } = this.props;\n\n    const current = slides.find(slide => id === slide.id);\n    if (!current) return null;\n\n    const {\n      height,\n      src,\n      width,\n    } = current;\n\n    return (\n      <g>\n        {this.getProxy(id, height, width)}\n        <image\n          height={height}\n          href={buildFileURL(this.recordId, src)}\n          x={0}\n          width={width}\n          y={0}\n        />\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { buildFileURL } from 'utils/data';\nimport './index.scss';\n\nexport default class Canvas extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  renderPolyline(style, data) {\n    return <polyline\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderLine(style, data) {\n    return <line\n      style={style}\n      x1={data.x1}\n      y1={data.y1}\n      x2={data.x2}\n      y2={data.y2}\n    />;\n  }\n\n  renderPolygon(style, data) {\n    return <polygon\n      style={style}\n      points={data.points}\n    />;\n  }\n\n  renderPath(style, data) {\n    return <path\n      style={style}\n      d={data.d}\n    />;\n  }\n\n  renderCircle(style, data) {\n    return <circle\n      style={style}\n      cx={data.cx}\n      cy={data.cy}\n      r={data.r}\n    />;\n  }\n\n  renderText(style, data) {\n    return (\n      <foreignObject\n        style={style}\n        height={data.height}\n        width={data.width}\n        x={data.x}\n        y={data.y}\n      >\n        <div xmlns=\"http://www.w3.org/1999/xhtml\">\n          {data.text.split('\\r').map(line => <span>{line}<br /></span>)}\n        </div>\n      </foreignObject>\n    );\n  }\n\n  renderPoll(style, data) {\n    const {\n      image,\n      rect,\n    } = data;\n\n    return (\n      <g style={style}>\n        <rect\n          fill={rect.fill}\n          height={rect.height}\n          stroke={rect.stroke}\n          strokeWidth={rect['stroke-width']}\n          width={rect.width}\n          x={rect.x}\n          y={rect.y}\n        />\n        <image\n          height={image.height}\n          transform={image.transform}\n          width={image.width}\n          x={image.x}\n          href={buildFileURL(this.recordId, image['xlink:href'])}\n          y={image.y}\n        />\n      </g>\n    );\n  }\n\n  renderCanvas(drawsInterval) {\n    const { draws } = this.props;\n    const canvas = [];\n\n    for (let i = 0; i < drawsInterval.length; i++) {\n      if (!drawsInterval[i]) continue;\n\n      const {\n        id,\n        shape,\n        style,\n      } = draws[i];\n\n      const j = i + 1;\n      let intermediate = false;\n      if (j < drawsInterval.length) {\n        intermediate = draws[j].id === id;\n      }\n\n      if (intermediate) continue;\n\n      const {\n        data,\n        type,\n      } = shape;\n\n      switch (type) {\n        case 'poll':\n          canvas.push(this.renderPoll(style, data));\n          break;\n        case 'polyline':\n          canvas.push(this.renderPolyline(style, data));\n          break;\n        case 'line':\n          canvas.push(this.renderLine(style, data));\n          break;\n        case 'polygon':\n          canvas.push(this.renderPolygon(style, data));\n          break;\n        case 'path':\n          canvas.push(this.renderPath(style, data));\n          break;\n        case 'circle':\n          canvas.push(this.renderCircle(style, data));\n          break;\n        case 'text':\n          canvas.push(this.renderText(style, data));\n          break;\n        default:\n      }\n    }\n\n    return canvas;\n  }\n\n  render() {\n    const { drawsInterval } = this.props;\n\n    if (drawsInterval.length === 0) return null;\n\n    return (\n      <g>\n        {this.renderCanvas(drawsInterval)}\n      </g>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Cursor from './cursor';\nimport Slide from './slide';\nimport Canvas from './canvas';\nimport { ID } from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.presentation.wrapper.aria',\n    description: 'Aria label for the presentation wrapper',\n  },\n});\n\nexport default class Presentation extends PureComponent {\n  getSlideId() {\n    const {\n      currentSlideIndex,\n      slides,\n    } = this.props;\n\n    const inactive = -1;\n    if (currentSlideIndex === -1) return inactive;\n\n    const currentData = slides[currentSlideIndex];\n\n    return currentData.id;\n  }\n\n  getViewBox() {\n    const {\n      currentPanzoomIndex,\n      panzooms,\n    } = this.props;\n\n    const inactive = {\n      height: 0,\n      x: 0,\n      width: 0,\n      y: 0,\n    };\n\n    if (currentPanzoomIndex === -1) return inactive;\n\n    const currentData = panzooms[currentPanzoomIndex];\n\n    return {\n      height: currentData.height,\n      x: currentData.x,\n      width: currentData.width,\n      y: currentData.y,\n    };\n  }\n\n  buildViewBoxAttr(viewBox) {\n    const {\n      height,\n      x,\n      width,\n      y,\n    } = viewBox;\n\n    return `${x} ${y} ${width} ${height}`;\n  }\n\n  getCursor(viewBox) {\n    const {\n      currentCursorIndex,\n      cursor,\n    } = this.props;\n\n    const inactive = {\n      x: -1,\n      y: -1,\n    }\n\n    if (currentCursorIndex === -1) return inactive;\n\n    const currentData = cursor[currentCursorIndex];\n    if (currentData.x === -1 && currentData.y === -1) return inactive;\n\n    return {\n      x: viewBox.x + (currentData.x * viewBox.width),\n      y: viewBox.y + (currentData.y * viewBox.height),\n    };\n  }\n\n  render() {\n    const {\n      active,\n      draws,\n      drawsInterval,\n      intl,\n      metadata,\n      slides,\n      thumbnails,\n    } = this.props;\n\n    const slideId = this.getSlideId();\n    const viewBox = this.getViewBox();\n    const cursor = this.getCursor(viewBox);\n    const canvasId = slideId;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('presentation-wrapper', { inactive: !active })}\n        id={ID.PRESENTATION}\n      >\n        <div className=\"presentation\">\n          <svg\n            viewBox={this.buildViewBoxAttr(viewBox)}\n            xmlns=\"http://www.w3.org/2000/svg\"\n            xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          >\n            <defs>\n              <clipPath id=\"viewBox\">\n                <rect\n                  height={viewBox.height}\n                  x={viewBox.x}\n                  width={viewBox.width}\n                  y={viewBox.y}\n                />\n              </clipPath>\n            </defs>\n            <g clipPath=\"url(#viewBox)\">\n              <Slide\n                id={slideId}\n                metadata={metadata}\n                slides={slides}\n                thumbnails={thumbnails}\n              />\n              <Canvas\n                draws={draws}\n                drawsInterval={drawsInterval}\n                id={canvasId}\n                metadata={metadata}\n              />\n              <Cursor\n                x={cursor.x}\n                y={cursor.y}\n              />\n            </g>\n          </svg>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport { thumbnails as config } from 'config';\nimport Button from 'components/utils/button';\nimport {\n  ID,\n  buildFileURL,\n  getScrollLeft,\n  isEmpty,\n  isEqual,\n} from 'utils/data';\nimport './index.scss';\n\nconst SCREENSHARE = 'deskshare';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.thumbnails.wrapper.aria',\n    description: 'Aria label for the thumbnails wrapper',\n  },\n  clear: {\n    id: 'button.clear.aria',\n    description: 'Aria label for the clear button',\n  },\n});\n\nexport default class Thumbnails extends Component {\n  constructor(props) {\n    super(props);\n\n    const { metadata } = props;\n\n    this.recordId = metadata.id;\n  }\n\n  componentDidMount() {\n    this.handleAutoScroll();\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const {\n      currentDataIndex,\n      search,\n    } = this.props;\n\n    if (currentDataIndex !== nextProps.currentDataIndex) {\n      return true;\n    }\n\n    if (!isEqual(search, nextProps.search)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  componentDidUpdate() {\n    this.handleAutoScroll();\n  }\n\n  handleOnClick(timestamp) {\n    const { player } = this.props;\n\n    if (!player) return null;\n\n    player.currentTime(timestamp);\n  }\n\n  handleAutoScroll() {\n    if (!config.scroll) return;\n\n    // Auto-scroll can start after getting the first and current nodes\n    if (this.firstNode && this.currentNode) {\n      const { parentNode } = this.currentNode;\n\n      parentNode.scrollLeft = getScrollLeft(this.firstNode, this.currentNode, config.align);\n    }\n  }\n\n  // Set node as ref so we can manage auto-scroll\n  setRef(node, index) {\n    const { currentDataIndex } = this.props;\n\n    if (index === 0) {\n      this.firstNode = node;\n    }\n\n    if (index === currentDataIndex) {\n      this.currentNode = node;\n    }\n  }\n\n  isFiltered(index) {\n    const {\n      interactive,\n      search,\n    } = this.props;\n\n    if (interactive) {\n      return !isEmpty(search) && !search.includes(index);\n    } else {\n      return !search.includes(index);\n    }\n  }\n\n  renderImage(item) {\n    const {\n      alt,\n      src,\n    } = item;\n\n    const screenshare = src === SCREENSHARE;\n\n    if (screenshare) {\n      return (\n        <div className={cx('thumbnail-image', { screenshare })}>\n          <span className=\"icon-screenshare\" />\n        </div>\n      );\n    }\n\n    return (\n      <img\n        alt={alt}\n        className=\"thumbnail-image\"\n        src={buildFileURL(this.recordId, src)}\n      />\n    );\n  }\n\n  renderThumbnail(item, index) {\n    const {\n      currentDataIndex,\n      interactive,\n    } = this.props;\n\n    if (!interactive) {\n      return (\n        <div\n          className=\"thumbnail-wrapper\"\n          tabIndex=\"0\"\n        >\n          <div className=\"thumbnail\">\n            {this.renderImage(item)}\n            <div className=\"thumbnail-index\">\n              {index + 1}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    const active = index === currentDataIndex;\n    const onClick = () => this.handleOnClick(item.timestamp);\n\n    const styles = {\n      active,\n      interactive,\n    };\n\n    return (\n      <div\n        className={cx('thumbnail-wrapper', styles)}\n        onClick={onClick}\n        onKeyPress={(e) => e.key === 'Enter' ? onClick() : null}\n        ref={node => this.setRef(node, index)}\n        tabIndex=\"0\"\n      >\n        <div className=\"thumbnail\">\n          {this.renderImage(item)}\n          <div className=\"thumbnail-index\">\n            {index + 1}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderThumbnails() {\n    const { thumbnails } = this.props;\n\n    return thumbnails.reduce((result, item, index) => {\n      if (!this.isFiltered(index)) {\n        result.push(this.renderThumbnail(item, index));\n      }\n\n      return result;\n    }, []);\n  }\n\n  renderClearButton() {\n    const { interactive } = this.props;\n    if (!interactive) return null;\n\n    const { search } = this.props;\n    if (isEmpty(search)) return null;\n\n    const {\n      handleSearch,\n      intl,\n    } = this.props;\n\n    return (\n      <div className=\"clear-button\">\n        <Button\n          aria={intl.formatMessage(intlMessages.clear)}\n          handleOnClick={() => handleSearch ? handleSearch([]) : null}\n          icon=\"close\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"thumbnails-wrapper\"\n        id={ID.THUMBNAILS}\n        tabIndex=\"0\"\n      >\n        {this.renderThumbnails()}\n        {this.renderClearButton()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Thumbnails from 'components/thumbnails';\nimport { search as config } from 'config';\nimport Button from 'components/utils/button';\nimport Modal from 'components/utils/modal';\nimport {\n  isEmpty,\n  isEqual,\n  search,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  search: {\n    id: 'player.search.aria',\n    description: 'Aria label for the search button',\n  },\n});\n\nexport default class Search extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      disabled: true,\n      search: [],\n    };\n  }\n\n  handleOnChange(event) {\n    if (!event || !event.target) return null;\n\n    const { value } = event.target;\n    if (value) {\n      const disabled = value.length < config.length.min;\n      if (!disabled) {\n        const { thumbnails } = this.props;\n        const result = search(value, thumbnails);\n\n        if (!isEqual(this.state.search, result, 'array')) {\n          this.setState({ search: result });\n        }\n      } else {\n        if (!isEmpty(this.state.search)) {\n          this.setState({ search: [] });\n        }\n      }\n\n      if (this.state.disabled !== disabled) {\n        this.setState({ disabled });\n      }\n    }\n  }\n\n  handleOnClick(event) {\n    const {\n      handleSearch,\n      toggleModal,\n    } = this.props;\n\n    const { search } = this.state;\n\n    handleSearch(search);\n    toggleModal();\n  }\n\n  renderBody() {\n    const {\n      intl,\n      metadata,\n      thumbnails,\n    } = this.props;\n\n    const { search } = this.state;\n\n    return (\n      <div className=\"search-body\">\n        <input\n          maxLength={config.length.max}\n          minLength={config.length.min}\n          onChange={(event) => this.handleOnChange(event)}\n          type=\"text\"\n        />\n        <div className={cx('result', { active: true })}>\n          <Thumbnails\n            currentDataIndex={0}\n            handleSearch={null}\n            interactive={false}\n            intl={intl}\n            metadata={metadata}\n            player={null}\n            search={search}\n            thumbnails={thumbnails}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  renderFooter() {\n    const { intl } = this.props;\n    const { disabled } = this.state;\n\n    return (\n      <div className=\"search-footer\">\n        <Button\n          aria={intl.formatMessage(intlMessages.search)}\n          disabled={disabled}\n          handleOnClick={(event) => this.handleOnClick(event)}\n          icon=\"search\"\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      toggleModal,\n    } = this.props;\n\n    return (\n      <Modal\n        intl={intl}\n        onClose={toggleModal}\n      >\n        {this.renderBody()}\n        {this.renderFooter()}\n      </Modal>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport videojs from 'video.js/core.es.js';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.screenshare.wrapper.aria',\n    description: 'Aria label for the screenshare wrapper',\n  },\n});\n\nexport default class Screenshare extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.mp4'),\n        type: `video/mp4`,\n      }, {\n        src: buildFileURL(metadata.id, 'deskshare/deskshare.webm'),\n        type: `video/webm`,\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    this.options = {\n      controls: false,\n      fill: true,\n      sources,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const { onPlayerReady } = this.props;\n\n      if (onPlayerReady) onPlayerReady(ID.SCREENSHARE, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const {\n      active,\n      intl,\n    } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('screenshare-wrapper', { inactive: !active })}\n        id={ID.SCREENSHARE}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport cx from 'classnames';\nimport Avatar from 'components/utils/avatar';\nimport {\n  ID,\n  isEmpty,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.talkers.wrapper.aria',\n    description: 'Aria label for the talkers wrapper',\n  },\n});\n\nexport default class Talkers extends PureComponent {\n  renderTalkers(talkers) {\n    return (\n      <div className=\"talkers\">\n        {talkers.map(talker => {\n          const {\n            active,\n            initials,\n            name,\n          } = talker;\n\n          return (\n            <div\n              className={cx('talker', { inactive: !active })}>\n              <Avatar\n                initials={initials}\n                name={name}\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      intl,\n      talkers,\n    } = this.props;\n\n    if (isEmpty(talkers)) return null;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"talkers-wrapper\"\n        id={ID.TALKERS}\n        tabIndex=\"0\"\n      >\n        {this.renderTalkers(talkers)}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport { defineMessages } from 'react-intl';\nimport videojs from 'video.js/core.es.js';\nimport { video as config } from 'config';\nimport {\n  ID,\n  buildFileURL,\n} from 'utils/data';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.video.wrapper.aria',\n    description: 'Aria label for the video wrapper',\n  },\n});\n\nexport default class Video extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      captions,\n      media,\n      metadata,\n    } = props;\n\n    const sources = [\n      {\n        src: buildFileURL(metadata.id, 'video/webcams.mp4'),\n        type: 'video/mp4',\n      }, {\n        src: buildFileURL(metadata.id, 'video/webcams.webm'),\n        type: 'video/webm',\n      },\n    ].filter(src => {\n      const { type } = src;\n\n      return media.find(m => type.includes(m));\n    });\n\n    const tracks = captions.map(lang => {\n      const {\n        locale,\n        localeName,\n      } = lang;\n\n      return {\n        kind: 'captions',\n        src: buildFileURL(metadata.id, `caption_${locale}.vtt`),\n        srclang: locale,\n        label: localeName,\n      };\n    });\n\n    this.options = {\n      controlBar: {\n        fullscreenToggle: false,\n        pictureInPictureToggle: false,\n        volumePanel: {\n          inline: false,\n          vertical: true,\n        },\n      },\n      controls: true,\n      fill: true,\n      inactivityTimeout: 0,\n      playbackRates: config.rates,\n      sources,\n      tracks,\n    };\n  }\n\n  componentDidMount() {\n    this.player = videojs(this.node, this.options, () => {\n      const {\n        onPlayerReady,\n        onTimeUpdate,\n        time,\n      } = this.props;\n\n      if (onTimeUpdate) {\n        this.player.on('play', () => {\n          setInterval(() => {\n            const time = this.player.currentTime();\n            onTimeUpdate(time);\n          }, 1000 / config.fps);\n        });\n\n        this.player.on('pause', () => clearInterval());\n      }\n\n      if (time) {\n        this.player.on('loadedmetadata', () => {\n          const duration = this.player.duration();\n          if (time < duration) {\n            this.player.currentTime(time);\n          }\n        });\n      }\n\n      if (onPlayerReady) onPlayerReady(ID.VIDEO, this.player);\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.player) {\n      this.player.dispose();\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"video-wrapper\"\n        id={ID.VIDEO}\n      >\n        <div data-vjs-player>\n          <video\n            className=\"video-js\"\n            playsInline\n            preload=\"auto\"\n            ref={node => this.node = node}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './index.scss';\n\nexport default () => {\n  return <div className=\"bottom-bar\" />;\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  FormattedDate,\n} from 'react-intl';\nimport cx from 'classnames';\nimport { controls as config } from 'config';\nimport Button from 'components/utils/button';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  about: {\n    id: 'button.about.aria',\n    description: 'Aria label for the about button',\n  },\n  section: {\n    id: 'button.section.aria',\n    description: 'Aria label for the section button',\n  },\n  search: {\n    id: 'button.search.aria',\n    description: 'Aria label for the search button',\n  },\n  swap: {\n    id: 'button.swap.aria',\n    description: 'Aria label for the swap button',\n  },\n});\n\nexport default class TopBar extends PureComponent {\n  renderSearchButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSearch,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.search)}\n        circle\n        handleOnClick={toggleSearch}\n        icon=\"search\"\n      />\n    );\n  }\n\n  renderSectionButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      section,\n      toggleSection,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.section)}\n        circle\n        handleOnClick={toggleSection}\n        icon={section ? 'arrow-left' : 'arrow-right'}\n      />\n    );\n  }\n\n  renderSwapButton(enabled) {\n    if (!enabled) return null;\n\n    const {\n      intl,\n      toggleSwap,\n    } = this.props;\n\n    return (\n      <Button\n        aria={intl.formatMessage(intlMessages.swap)}\n        circle\n        handleOnClick={toggleSwap}\n        icon=\"swap\"\n      />\n    );\n  }\n\n  renderTitle(interactive) {\n    const {\n      name,\n      start,\n    } = this.props;\n\n    const date = <FormattedDate value={new Date(start)} />;\n\n    if (interactive) {\n      const {\n        intl,\n        toggleAbout,\n      } = this.props;\n\n      return (\n        <span\n          aria={intl.formatMessage(intlMessages.about)}\n          className={cx('title', { interactive })}\n          onClick={toggleAbout}\n          onKeyPress={(e) => e.key === 'Enter' ? toggleAbout() : null}\n          tabIndex=\"0\"\n        >\n          {name} - {date}\n        </span>\n      );\n    }\n\n    return (\n      <span className=\"title\">\n        {name} - {date}\n      </span>\n    );\n  }\n\n  render() {\n    const {\n      content,\n      control,\n    } = this.props;\n\n    const {\n      about,\n      search,\n      section,\n      swap,\n    } = config;\n\n    const {\n      presentation,\n      screenshare,\n    } = content;\n\n    const single = !presentation && !screenshare;\n\n    return (\n      <div className=\"top-bar\">\n        <div className=\"left\">\n          {this.renderSectionButton(control && section)}\n        </div>\n        <div className=\"center\">\n          {this.renderTitle(control && about)}\n        </div>\n        <div className=\"right\">\n          {this.renderSearchButton(control && search && !single)}\n          {this.renderSwapButton(control && swap && !single)}\n        </div>\n      </div>\n    );\n  }\n}\n","import { parseStringPromise } from 'xml2js';\nimport { files as config } from 'config';\nimport {\n  getFileType,\n  hasProperty,\n  isEmpty,\n} from './data';\nimport logger from './logger';\n\nconst getAttr = data => {\n  if (!data) return {};\n\n  const attr = data['$'];\n  if (!attr) return {};\n\n  return attr;\n};\n\nconst getChildren = data => {\n  if (!data) return [];\n\n  const children = data['$$'];\n  if (!children) return [];\n\n  return children;\n};\n\nconst getId = data => {\n  if (!data) return -1;\n\n  const id = data.match(/\\d+$/);\n  if (!id || id.length === 0) return -1;\n\n  return parseInt(id.shift(), 10);\n};\n\nconst getNumbers = data => {\n  if (!data) return [];\n\n  const trimmed = data.trim().replace(/  +/g, ' ');\n  if (trimmed.length === 0) return [];\n\n  const split = trimmed.split(' ');\n  const numbers = split.map(v => parseFloat(v));\n\n  return numbers;\n};\n\nconst buildAlternates = result => {\n  if (!result) return [];\n\n  let data = [];\n  for (const presentation in result) {\n    if (hasProperty(result, presentation)) {\n      const slides = result[presentation];\n\n      for (const slide in slides) {\n        if (hasProperty(slides, slide)) {\n          const text = slides[slide];\n\n          data.push({\n            src: `presentation/${presentation}/${slide}.png`,\n            text,\n          });\n        }\n      }\n    }\n  }\n\n  return data;\n};\n\n// TODO\nconst buildCaptions = result => {\n  if (!result) return [];\n\n  let data = [];\n  data = result;\n\n  return data;\n};\n\nconst buildMetadata = result => {\n  let data = {};\n  const { recording } = result;\n\n  if (hasProperty(recording, 'meeting')) {\n    const attr = getAttr(recording.meeting.shift());\n    const { id } = attr;\n    const meta = recording.meta.shift();\n    const end = parseInt(recording.end_time.shift(), 10);\n    const name = meta.name ? meta.name.shift() : attr.name;\n    const participants = parseInt(recording.participants.shift(), 10);\n    const start = parseInt(recording.start_time.shift(), 10);\n\n    data = {\n      end,\n      id,\n      name,\n      participants,\n      start,\n    };\n  }\n\n  return data;\n};\n\nconst buildNotes = result => {\n  if (!result) return '';\n\n  // Extract the notes' body\n  const regex = /<body>\\n.*\\n<\\/body>/g;\n  const match = result.match(regex);\n\n  let data = '';\n  if (!isEmpty(match)) {\n    data = match.shift();\n  }\n\n  return data;\n};\n\nconst buildStyle = data => {\n  const items = data.split(';');\n  let style = {};\n\n  items.forEach(item => {\n    const trimmed = item.trim();\n\n    if (trimmed.length === 0) return;\n\n    const split = trimmed.split(':').map(i => i.trim());\n\n    // Remove visibility\n    if (split[0] === 'visibility') return;\n\n    style[split[0]] = split[1];\n  });\n\n  return style;\n};\n\nconst buildSlides = image => {\n  let slides = [];\n\n  if (image) {\n    image.forEach(img => {\n      const attr = getAttr(img);\n      const src = attr['xlink:href'];\n\n      // Skip the logo\n      if (!src) return;\n\n      // Get the number from the id name\n      const slideId = getId(attr.id);\n      const timestamps = getNumbers(attr.in);\n\n      timestamps.forEach(timestamp => {\n        slides.push({\n          id: slideId,\n          height: parseInt(attr.height),\n          src,\n          timestamp,\n          width: parseInt(attr.width),\n        });\n      });\n    });\n\n    slides = slides.sort((a, b) => a.timestamp - b.timestamp);\n  }\n\n  return slides;\n};\n\nconst buildTalkers = result => {\n  const data = [];\n\n  return data;\n};\n\nconst buildThumbnails = slides => {\n  const screenshare = 'deskshare';\n  const prefix = 'slide-';\n  const url = 'thumbnails/thumb-';\n\n  return slides.reduce((result, slide) => {\n    const {\n      id,\n      src,\n      timestamp,\n    } = slide;\n\n    if (src.includes(screenshare)) {\n      result.push({\n        id,\n        src: screenshare,\n        timestamp,\n      });\n    } else {\n      result.push({\n        id,\n        src: src.replace(prefix, url),\n        timestamp,\n      });\n    }\n\n    return result;\n  }, []);\n};\n\nconst parseText = data => {\n  let text = '';\n\n  const children = getChildren(data);\n  if (!isEmpty(children)) {\n    const child = children.shift();\n    const grandchildren = getChildren(child);\n    if (!isEmpty(grandchildren)) {\n      text = grandchildren.map(grandchild => {\n        const name = grandchild['#name'];\n        if (name === 'br') return '\\r';\n\n        return grandchild['_'];\n      }).join('');\n    }\n  }\n\n  return text;\n};\n\nconst buildCanvases = group => {\n  let canvases = [];\n\n  if (group) {\n    canvases = group.map(canvas => {\n      const canvasAttr = getAttr(canvas);\n      // Get the number from the id name\n      const canvasId = getId(canvasAttr.id);\n\n      let draws = canvas.g.map(g => {\n        const drawAttr = getAttr(g);\n        const timestamp = parseFloat(drawAttr.timestamp);\n        const clear = parseFloat(drawAttr.undo);\n        const style = buildStyle(drawAttr.style);\n        const drawId = getId(drawAttr.shape);\n\n        let shape = {};\n        if (g.rect && g.image) {\n          shape.type = 'poll';\n          const rect = getAttr(g.rect.shift());\n          const image = getAttr(g.image.shift());\n          shape.data = Object.assign({ rect }, { image });\n        } else if (g.polyline) {\n          shape.type = 'polyline';\n          shape.data = Object.assign({}, getAttr(g.polyline.shift()));\n        } else if (g.line) {\n          shape.type = 'line';\n          shape.data = Object.assign({}, getAttr(g.line.shift()));\n        } else if (g.polygon) {\n          shape.type = 'polygon';\n          shape.data = Object.assign({}, getAttr(g.polygon.shift()));\n        } else if (g.circle) {\n          shape.type = 'circle';\n          shape.data = Object.assign({}, getAttr(g.circle.shift()));\n        } else if (g.path) {\n          shape.type = 'path';\n          shape.data = Object.assign({}, getAttr(g.path.shift()));\n        } else if (g.switch) {\n          shape.type = 'text';\n          const foreignObject = g.switch.shift()['foreignObject'].shift();\n          const text = parseText(foreignObject);\n          shape.data = Object.assign({ text }, getAttr(foreignObject));\n        }\n\n        return {\n          clear,\n          id: drawId,\n          shape,\n          style,\n          timestamp,\n        };\n      });\n\n      return {\n        draws,\n        id: canvasId,\n      };\n    });\n  }\n\n  return canvases;\n};\n\nconst buildShapes = result => {\n  let data = {};\n  const { svg } = result;\n\n  if (svg) {\n    const {\n      image,\n      g,\n    } = svg;\n\n    data.slides = buildSlides(image);\n    data.thumbnails = buildThumbnails(data.slides);\n    data.canvases = buildCanvases(g);\n  }\n\n  return data;\n};\n\nconst buildPanzooms = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(panzoom => {\n      const attr = getAttr(panzoom);\n      const viewbox = getNumbers(panzoom.viewBox.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: viewbox.shift(),\n        y: viewbox.shift(),\n        width: viewbox.shift(),\n        height: viewbox.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildCursor = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(cursor => {\n      const attr = getAttr(cursor);\n      const position = getNumbers(cursor.cursor.shift());\n\n      return {\n        timestamp: parseFloat(attr.timestamp),\n        x: position.shift(),\n        y: position.shift(),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst clearHyperlink = message => {\n  const regex = /<a href=\"(.*)\" rel=\"nofollow\"><u>\\1<\\/u><\\/a>/g;\n\n  return message.replace(regex, '$1');\n};\n\nconst decodeXML = message => {\n  return message\n    .replace(/&(quot|#34);/g, '\"')\n    .replace(/&(amp|#38);/g, '&')\n    .replace(/&(apos|#39);/g, \"'\")\n    .replace(/&(lt|#60);/g, '<')\n    .replace(/&(gt|#62);/g, '>');\n};\n\nconst getInitials = name => {\n  let initials;\n\n  if (name) {\n    initials = name\n      .slice(0, 2)\n      .toLowerCase()\n      .trim();\n  }\n\n  return initials;\n};\n\nconst buildChat = result => {\n  const { popcorn } = result;\n  let data = [];\n\n  if (hasProperty(popcorn, 'chattimeline')) {\n    const { chattimeline } = popcorn;\n    data = chattimeline.map(chat => {\n      const attr = getAttr(chat);\n      const clear = attr.out ? parseFloat(attr.out) : -1;\n      const message = decodeXML(clearHyperlink(attr.message));\n      const initials = getInitials(attr.name);\n\n      return {\n        clear,\n        hyperlink: message !== attr.message,\n        initials,\n        name: attr.name,\n        message,\n        timestamp: parseFloat(attr.in),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst buildScreenshare = result => {\n  let data = [];\n  const { recording } = result;\n\n  if (hasProperty(recording, 'event')) {\n    data = recording.event.map(screenshare => {\n      const attr = getAttr(screenshare);\n\n      return {\n        timestamp: parseFloat(attr.start_timestamp),\n        clear: parseFloat(attr.stop_timestamp),\n      };\n    });\n  }\n\n  return data;\n};\n\nconst getOptions = filename => {\n  let options = {};\n\n  switch (filename) {\n    case config.data.shapes:\n      options = {\n        explicitChildren: true,\n        preserveChildrenOrder: true,\n        charsAsChildren: true,\n      };\n      break;\n    default:\n  }\n\n  return options;\n};\n\nconst build = (filename, value) => {\n  return new Promise((resolve, reject) => {\n    let data;\n    const fileType = getFileType(filename);\n\n    if (fileType === 'json') {\n      switch (filename) {\n        case config.data.alternates:\n          data = buildAlternates(value);\n          break;\n        case config.data.captions:\n          data = buildCaptions(value);\n          break;\n        case config.data.talkers:\n          data = buildTalkers(value);\n          break;\n        default:\n          logger.debug('unhandled', 'json', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else if (fileType === 'html') {\n      switch (filename) {\n        case config.data.notes:\n          data = buildNotes(value);\n          break;\n        default:\n          logger.debug('unhandled', 'html', filename);\n          reject(filename);\n      }\n      resolve(data);\n    } else {\n      if (!value) {\n        logger.warn('missing', filename);\n\n        return resolve(null);\n      }\n\n      // Parse XML data\n      const options = getOptions(filename);\n      parseStringPromise(value, options).then(result => {\n        switch (filename) {\n          case config.data.chat:\n            data = buildChat(result);\n            break;\n          case config.data.cursor:\n            data = buildCursor(result);\n            break;\n          case config.data.metadata:\n            data = buildMetadata(result);\n            break;\n          case config.data.panzooms:\n            data = buildPanzooms(result);\n            break;\n          case config.data.screenshare:\n            data = buildScreenshare(result);\n            break;\n          case config.data.shapes:\n            data = buildShapes(result);\n            break;\n          default:\n            logger.debug('unhandled', 'xml', filename);\n            reject(filename);\n        }\n        resolve(data);\n      }).catch(error => reject(error));\n    }\n  });\n};\n\nconst addAlternatesToThumbnails = (thumbnails, alternates) => {\n  const prefix = 'thumbnails/thumb-';\n  const url = 'slide-';\n\n  return thumbnails.map(thumbnail => {\n    const { src } = thumbnail;\n    thumbnail.alt = '';\n\n    const found = alternates.find(alt => src.replace(prefix, url) === alt.src);\n    if (found) thumbnail.alt = found.text;\n\n    return thumbnail;\n  });\n};\n\nexport {\n  addAlternatesToThumbnails,\n  build,\n  buildStyle,\n  decodeXML,\n  getAttr,\n  getId,\n  getNumbers,\n};\n","import { monitor as config } from 'config';\nimport logger from './logger';\n\nexport default class Monitor {\n  constructor(id) {\n    this.enabled = config.enabled;\n    this.id = id;\n    this.interval = config.interval * 1000;\n    this.url = config.url;\n  }\n\n  buildBody(message) {\n    return JSON.stringify(\n      Object.assign(\n        { id: this.id },\n        message,\n      )\n    );\n  }\n\n  collect(request) {\n    if (!this.enabled) return null;\n\n    setInterval(() => {\n      const message = request();\n      logger.debug('monitor', message);\n      this.send(message);\n    }, this.interval);\n  }\n\n  send(message) {\n    fetch(this.url, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: this.buildBody(message),\n    });\n  }\n}\n","import { shortcuts as config } from 'config';\nimport logger from './logger';\n\nexport default class Shortcuts {\n  constructor(actions) {\n    this.enabled = config.enabled;\n\n    if (!this.enabled) {\n      logger.debug('shortcuts', 'disabled');\n    } else {\n      this.init(actions);\n    }\n  }\n\n  init(actions) {\n    this.listeners = [];\n\n    for (let prop in actions) {\n      const value = actions[prop];\n      if (typeof value === 'function') {\n        const key = config[prop];\n        this.add(key, value);\n      } else {\n        for (let p in value) {\n          const k = config[prop][p];\n          const v = value[p];\n          this.add(k, v);\n        }\n      }\n    }\n  }\n\n  add(key, action) {\n    if (!key || typeof key !== 'string') {\n      logger.warn('shortcuts', 'invalid', 'key');\n      return null;\n    } else if (key.length === 0) {\n      return null;\n    }\n\n    if (!action || typeof action !== 'function') {\n      logger.warn('shortcuts', 'invalid', 'action');\n      return null;\n    }\n\n    const listener = document.addEventListener('keydown', (e) => {\n      if (e.altKey && e.shiftKey) {\n        if (e.key === key) action();\n      }\n    });\n\n    this.listeners.push(listener);\n  }\n\n  destroy() {\n    this.listeners.forEach(listener => {\n      document.removeEventListener(listener);\n    });\n  }\n}\n","import logger from './logger';\n\nconst STATUSES = [\n  'canplay',\n  'seeking',\n  'waiting',\n];\n\nconst EVENTS = [\n  'abort',\n  'canplay',\n  'canplaythrough',\n  'durationchange',\n  'emptied',\n  'encrypted',\n  'ended',\n  'error',\n  'interruptbegin',\n  'interruptend',\n  'loadeddata',\n  'loadedmetadata',\n  'loadstart',\n  'mozaudioavailable',\n  'pause',\n  'play',\n  'playing',\n  'progress',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'stalled',\n  'suspend',\n  //'timeupdate',\n  'volumechange',\n  'waiting',\n];\n\nexport default class Synchronizer {\n  constructor(primary, secondary) {\n    this.primary = primary;\n    this.secondary = secondary;\n\n    this.status = {\n      primary: 'waiting',\n      secondary: 'waiting',\n    }\n\n    this.synching = false;\n\n    this.init();\n  }\n\n  init() {\n    STATUSES.forEach(status => {\n      this.primary.on(status, () => this.status.primary = status);\n      this.secondary.on(status, () => this.status.secondary = status);\n    });\n\n    this.primary.on('play', () => this.secondary.play());\n    this.primary.on('pause', () => this.secondary.pause());\n\n    this.primary.on('seeking', () => {\n      const currentTime = this.primary.currentTime();\n      this.secondary.currentTime(currentTime);\n    });\n\n    this.primary.on('ratechange', () => {\n      const playbackRate = this.primary.playbackRate();\n      this.secondary.playbackRate(playbackRate);\n    });\n\n    this.primary.on('waiting', () => {\n      if (!this.synching && this.status.secondary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.primary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    this.secondary.on('waiting', () => {\n      if (!this.synching && this.status.primary === 'canplay') {\n        this.synching = true;\n        this.primary.pause();\n      }\n    });\n\n    this.secondary.on('canplay', () => {\n      if (this.synching) {\n        this.synching = false;\n        this.primary.play();\n      }\n    });\n\n    EVENTS.forEach(event => {\n      this.primary.on(event, () => logger.debug(`primary ${event} ${this.status.primary}`));\n      this.secondary.on(event, () => logger.debug(`secondary ${event} ${this.status.secondary}`));\n    });\n  }\n}\n","import React, { PureComponent } from 'react';\nimport cx from 'classnames';\nimport { defineMessages } from 'react-intl';\nimport {\n  controls,\n  shortcuts,\n} from 'config';\nimport About from './about';\nimport Chat from './chat';\nimport Notes from './notes';\nimport Presentation from './presentation';\nimport Search from './search';\nimport Screenshare from './screenshare';\nimport Talkers from './talkers';\nimport Thumbnails from './thumbnails';\nimport Video from './video';\nimport BottomBar from './bars/bottom';\nimport TopBar from './bars/top';\nimport Button from './utils/button';\nimport { addAlternatesToThumbnails } from 'utils/builder';\nimport {\n  ID,\n  LAYOUT,\n  getActiveContent,\n  getControlFromLayout,\n  getCurrentDataIndex,\n  getCurrentDataInterval,\n  getData,\n  getDraws,\n  getSectionFromLayout,\n  getSwapFromLayout,\n  hasPresentation,\n  isContentVisible,\n  isEmpty,\n  isEqual,\n  seek,\n  skip,\n} from 'utils/data';\nimport logger from 'utils/logger';\nimport Monitor from 'utils/monitor';\nimport Shortcuts from 'utils/shortcuts';\nimport Synchronizer from 'utils/synchronizer';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'player.wrapper.aria',\n    description: 'Aria label for the player wrapper',\n  },\n  fullscreen: {\n    id: 'button.fullscreen.aria',\n    description: 'Aria label for the fullscreen button',\n  },\n  restore: {\n    id: 'button.restore.aria',\n    description: 'Aria label for the restore button',\n  },\n});\n\nexport default class Player extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      data,\n      layout,\n    } = props;\n\n    this.state = {\n      application: ID.CHAT,\n      control: getControlFromLayout(layout),\n      fullscreen: false,\n      modal: '',\n      search: [],\n      section: getSectionFromLayout(layout),\n      swap: getSwapFromLayout(layout),\n      thumbnails: true,\n      time: 0,\n    }\n\n    this.player = {\n      video: null,\n      screenshare: null,\n    };\n\n    this.initData(data);\n\n    this.handlePlayerReady = this.handlePlayerReady.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleTimeUpdate = this.handleTimeUpdate.bind(this);\n  }\n\n  componentDidMount() {\n    this.initMonitor();\n    this.initShortcuts();\n  }\n\n  componentWillUnmount() {\n    if (this.shortcuts) {\n      this.shortcuts.destroy();\n    }\n  }\n\n  initData(data) {\n    this.alternates = getData(data, ID.ALTERNATES);\n    this.captions = getData(data, ID.CAPTIONS);\n    this.chat = getData(data, ID.CHAT);\n    this.cursor = getData(data, ID.CURSOR);\n    this.metadata = getData(data, ID.METADATA);\n    this.notes = getData(data, ID.NOTES);\n    this.panzooms = getData(data, ID.PANZOOMS);\n    this.screenshare = getData(data, ID.SCREENSHARE);\n    this.shapes = getData(data, ID.SHAPES);\n    this.talkers = getData(data, ID.TALKERS);\n\n    this.canvases = this.shapes.canvases;\n    this.slides = this.shapes.slides;\n    this.thumbnails = addAlternatesToThumbnails(this.shapes.thumbnails, this.alternates);\n\n    this.content = {\n      captions: !isEmpty(this.captions),\n      chat: !isEmpty(this.chat),\n      notes: !isEmpty(this.notes),\n      presentation: hasPresentation(this.slides),\n      screenshare: !isEmpty(this.screenshare),\n    };\n\n    logger.debug(ID.PLAYER, data);\n  }\n\n  handlePlayerReady(media, player) {\n    switch (media) {\n      case ID.VIDEO:\n        logger.debug(ID.PLAYER, 'ready', ID.VIDEO);\n        this.player.video = player;\n        break;\n      case ID.SCREENSHARE:\n        logger.debug(ID.PLAYER, 'ready', ID.SCREENSHARE);\n        this.player.screenshare = player;\n        break;\n      default:\n        logger.debug('unhandled', media);\n    }\n\n    if (this.player.video && this.player.screenshare) {\n      this.synchronizer = new Synchronizer(this.player.video, this.player.screenshare);\n    }\n  }\n\n  handleSearch(value) {\n    const { search } = this.state;\n\n    if (!isEqual(search, value, 'array')) {\n      this.setState({ search: value });\n    }\n  }\n\n  handleTimeUpdate(value) {\n    const { time } = this.state;\n\n    if (time !== value) {\n      this.setState({ time: value });\n    }\n  }\n\n  initMonitor() {\n    this.monitor = new Monitor(this.metadata.id);\n    this.monitor.collect(() => {\n      const { video } = this.player;\n      if (!video) return {};\n\n      const time = video.currentTime();\n      return { time };\n    });\n  }\n\n  initShortcuts() {\n    const { seconds } = shortcuts.video;\n\n    const actions = {\n      fullscreen: () => this.toggleFullscreen(),\n      section: () => this.toggleSection(),\n      swap: () => this.toggleSwap(),\n      thumbnails: () => this.toggleThumbnails(),\n      slides: {\n        next: () => skip(this.player, this.slides, +1),\n        previous: () => skip(this.player, this.slides, -1),\n      },\n      video: {\n        backward: () => seek(this.player, -seconds),\n        forward: () => seek(this.player, +seconds),\n      },\n    };\n\n    this.shortcuts = new Shortcuts(actions);\n  }\n\n  toggleApplication(type) {\n    const { application } = this.state;\n\n    if (application === type) return null;\n\n    this.setState({ application: type });\n  }\n\n  toggleFullscreen() {\n    const { fullscreen } = this.state;\n\n    this.setState({ fullscreen: !fullscreen });\n  }\n\n  toggleModal(type) {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    this.setState({ modal: open ? '' : type });\n  }\n\n  toggleSection() {\n    const { section } = this.state;\n\n    this.setState({ section: !section });\n  }\n\n  toggleSwap() {\n    const { swap } = this.state;\n\n    this.setState({ swap: !swap });\n  }\n\n  toggleThumbnails() {\n    const { thumbnails } = this.state;\n\n    this.setState({ thumbnails: !thumbnails });\n  }\n\n  renderFullscreenButton(layout) {\n    const {\n      control,\n      fullscreen,\n      swap,\n    } = this.state;\n\n    if (!control || !controls.fullscreen) return null;\n\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    const single = !presentation && !screenshare;\n\n    if (!isContentVisible(layout, swap || single)) return null;\n\n    const { intl } = this.props;\n\n    const aria = fullscreen\n      ? intl.formatMessage(intlMessages.restore)\n      : intl.formatMessage(intlMessages.fullscreen)\n    ;\n\n    const icon = fullscreen ? 'restore' : 'fullscreen';\n\n    return (\n      <div className=\"fullscreen-button\">\n        <Button\n          aria={aria}\n          handleOnClick={() => this.toggleFullscreen()}\n          icon={icon}\n          type=\"solid\"\n        />\n      </div>\n    );\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    const open = modal.length > 0;\n\n    if (!open) return null;\n\n    const { intl } = this.props;\n\n    switch (modal) {\n      case ID.ABOUT:\n        return (\n          <About\n            content={this.content}\n            intl={intl}\n            metadata={this.metadata}\n            toggleModal={() => this.toggleModal(ID.ABOUT)}\n          />\n        );\n      case ID.SEARCH:\n        return (\n          <Search\n            intl={intl}\n            handleSearch={this.handleSearch}\n            metadata={this.metadata}\n            thumbnails={this.thumbnails}\n            toggleModal={() => this.toggleModal(ID.SEARCH)}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderTalkers(layout) {\n    const { intl } = this.props;\n    const { swap } = this.state;\n\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    const single = !presentation && !screenshare;\n\n    if (!isContentVisible(layout, swap || single)) return null;\n\n    return (\n      <Talkers\n        intl={intl}\n        talkers={this.talkers}\n      />\n    );\n  }\n\n  renderThumbnails() {\n    const { intl } = this.props;\n\n    const {\n      search,\n      time,\n    } = this.state;\n\n    const { video } = this.player;\n\n    const currentDataIndex = getCurrentDataIndex(this.thumbnails, time);\n\n    return (\n      <Thumbnails\n        currentDataIndex={currentDataIndex}\n        handleSearch={this.handleSearch}\n        interactive={true}\n        intl={intl}\n        metadata={this.metadata}\n        player={video}\n        search={search}\n        thumbnails={this.thumbnails}\n      />\n    );\n  }\n\n  renderTopBar() {\n    const { intl } = this.props;\n\n    const {\n      control,\n      section,\n    } = this.state;\n\n    const {\n      name,\n      start,\n    } = this.metadata;\n\n    return (\n      <TopBar\n        content={this.content}\n        control={control}\n        intl={intl}\n        name={name}\n        section={section}\n        start={start}\n        toggleAbout={() => this.toggleModal(ID.ABOUT)}\n        toggleSearch={() => this.toggleModal(ID.SEARCH)}\n        toggleSection={() => this.toggleSection()}\n        toggleSwap={() => this.toggleSwap()}\n      />\n    );\n  }\n\n  renderMedia(single) {\n    const {\n      data,\n      intl,\n      time,\n    } = this.props;\n\n    const { swap } = this.state;\n    const { media } = data;\n\n    return (\n      <div className={cx('media', { 'swapped-media': swap || single })}>\n        {this.renderTalkers(LAYOUT.MEDIA)}\n        {this.renderFullscreenButton(LAYOUT.MEDIA)}\n        <Video\n          captions={this.captions}\n          intl={intl}\n          media={media}\n          metadata={this.metadata}\n          onPlayerReady={this.handlePlayerReady}\n          onTimeUpdate={this.handleTimeUpdate}\n          time={time}\n        />\n      </div>\n    );\n  }\n\n  renderApplicationIcon(type) {\n    const { application } = this.state;\n    const active = application === type;\n\n    return (\n      <div\n        className={cx('application-icon', { inactive: !active })}\n        onClick={() => active ? null : this.toggleApplication(type)}\n      >\n        <span className={`icon-${type}`} />\n      </div>\n    );\n  }\n\n  renderApplicationContent() {\n    const { intl } = this.props;\n    const { application } = this.state;\n\n    switch (application) {\n      case ID.CHAT:\n        const { time } = this.state;\n        const { video } = this.player;\n        const currentChatIndex = getCurrentDataIndex(this.chat, time);\n\n        return (\n          <Chat\n            chat={this.chat}\n            currentDataIndex={currentChatIndex}\n            intl={intl}\n            player={video}\n          />\n        );\n      case ID.NOTES:\n        return (\n          <Notes\n            notes={this.notes}\n            intl={intl}\n          />\n        );\n      default:\n        return null;\n    }\n  }\n\n  renderApplication() {\n    return (\n      <div className=\"application\">\n        <div className=\"application-control\">\n          {this.renderApplicationIcon(ID.CHAT)}\n          {this.renderApplicationIcon(ID.NOTES)}\n        </div>\n        {this.renderApplicationContent()}\n      </div>\n    );\n  }\n\n  renderPresentation(active) {\n    const { intl } = this.props;\n    const { time } = this.state;\n\n    const currentSlideIndex = getCurrentDataIndex(this.slides, time);\n    const currentPanzoomIndex = getCurrentDataIndex(this.panzooms, time);\n    const currentCursorIndex = getCurrentDataIndex(this.cursor, time);\n    const draws = getDraws(currentSlideIndex, this.slides, this.canvases);\n    const currentDrawsInterval = getCurrentDataInterval(draws, time);\n\n    return (\n      <Presentation\n        active={active}\n        currentCursorIndex={currentCursorIndex}\n        currentPanzoomIndex={currentPanzoomIndex}\n        currentSlideIndex={currentSlideIndex}\n        cursor={this.cursor}\n        draws={draws}\n        drawsInterval={currentDrawsInterval}\n        intl={intl}\n        metadata={this.metadata}\n        panzooms={this.panzooms}\n        slides={this.slides}\n        thumbnails={this.thumbnails}\n      />\n    )\n  }\n\n  renderScreenshare(active) {\n    const { screenshare } = this.content;\n\n    if (!screenshare) return null;\n\n    const {\n      intl,\n      data,\n    } = this.props;\n\n    const { media } = data;\n\n    return (\n      <Screenshare\n        active={active}\n        intl={intl}\n        media={media}\n        metadata={this.metadata}\n        onPlayerReady={this.handlePlayerReady}\n      />\n    );\n  }\n\n  renderContent(single) {\n    if (single) return null;\n\n    const {\n      fullscreen,\n      search,\n      swap,\n      thumbnails,\n      time,\n    } = this.state;\n\n    const content = getActiveContent(this.screenshare, time);\n    const bottom = thumbnails && !fullscreen && (!swap || !isEmpty(search));\n\n    return (\n      <div className={cx('content', { 'swapped-content': swap })}>\n        {this.renderTalkers(LAYOUT.CONTENT)}\n        {this.renderFullscreenButton(LAYOUT.CONTENT)}\n        <div className=\"top-content\">\n          {this.renderPresentation(content === ID.PRESENTATION)}\n          {this.renderScreenshare(content === ID.SCREENSHARE)}\n        </div>\n        <div className={cx('bottom-content', { inactive: !bottom })}>\n          {this.renderThumbnails()}\n        </div>\n      </div>\n    );\n  }\n\n  renderBottomBar() {\n    return <BottomBar />;\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    const {\n      fullscreen,\n      section,\n    } = this.state;\n\n    const {\n      presentation,\n      screenshare,\n    } = this.content;\n\n    const single = !presentation && !screenshare;\n\n    const styles = {\n      'fullscreen-content': fullscreen,\n      'hidden-section': !section,\n      'single-content': single,\n    };\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className={cx('player-wrapper', styles)}\n        id={ID.PLAYER}\n      >\n        {this.renderTopBar()}\n        {this.renderMedia(single)}\n        {this.renderApplication()}\n        {this.renderContent(single)}\n        {this.renderBottomBar()}\n        {this.renderModal()}\n      </div>\n    );\n  }\n}\n","import React, { PureComponent } from 'react';\nimport {\n  defineMessages,\n  injectIntl,\n} from 'react-intl';\nimport config from 'config';\nimport Error from './error';\nimport Player from './player';\nimport { build } from 'utils/builder';\nimport {\n  ID,\n  buildFileURL,\n  getFileName,\n  getFileType,\n  getLayout,\n  getRecordId,\n  getTime,\n} from 'utils/data';\nimport logger from 'utils/logger';\nimport './index.scss';\n\nconst intlMessages = defineMessages({\n  aria: {\n    id: 'loader.wrapper.aria',\n    description: 'Aria label for the loader wrapper',\n  },\n});\n\nclass Loader extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    const {\n      location,\n      match,\n    } = props;\n\n    this.counter = 0;\n    this.data = {};\n    this.layout = getLayout(location);\n    this.recordId = getRecordId(match);\n    this.time = getTime(location);\n\n    this.state = {\n      error: this.recordId ? null : config.error['NOT_FOUND'],\n      loaded: false,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.recordId) return;\n\n    const { data } = config.files;\n\n    for (const file in data) {\n      this.fetchFile(this.recordId, data[file]);\n    }\n\n    this.fetchMedia();\n  }\n\n  fetchFile(recordId, file) {\n    const url = buildFileURL(recordId, file);\n    fetch(url).then(response => {\n      if (response.ok) {\n        logger.debug(ID.LOADER, file, response);\n        const fileType = getFileType(file);\n        switch (fileType) {\n          case 'json':\n            return response.json();\n          case 'html':\n            return response.text();\n          case 'svg':\n            return response.text();\n          case 'xml':\n            return response.text();\n          default:\n            this.setState({ error: config.error['BAD_REQUEST'] });\n            throw Error(file);\n        }\n      } else {\n        logger.warn('loader', file, response);\n        return null;\n      }\n    }).then(value => {\n      build(file, value).then(data => {\n        if (data) logger.debug(ID.LOADER, 'builded', file);\n        this.data[getFileName(file)] = data;\n        this.update();\n      }).catch(error => this.setState({ error: config.error['BAD_REQUEST'] }));\n    }).catch(error => this.setState({ error: config.error['NOT_FOUND'] }));\n  }\n\n  fetchMedia() {\n    const fetches = config.medias.map(type => {\n      const url = buildFileURL(this.recordId, `video/webcams.${type}`);\n      return fetch(url, { method: 'HEAD' });\n    });\n\n    Promise.all(fetches).then(responses => {\n      const media = [];\n      responses.forEach(response => {\n        const { ok, url } = response;\n        if (ok) {\n          logger.debug(ID.LOADER, 'media', response);\n          media.push(config.medias.find(type => url.endsWith(type)));\n        }\n      });\n\n      if (media.length > 0) {\n        this.data.media = media;\n        this.update();\n      } else {\n        // TODO: Handle audio medias\n        this.setState({ error: config.error['NOT_FOUND'] });\n      }\n    });\n  }\n\n  update() {\n    this.counter = this.counter + 1;\n    // TODO: Better control\n    if (this.counter > Object.keys(config.files.data).length) {\n      const { loaded } = this.state;\n      if (!loaded) this.setState({ loaded: true });\n    }\n  }\n\n  render() {\n    const { intl } = this.props;\n\n    const {\n      error,\n      loaded,\n    } = this.state;\n\n    if (error) {\n      return (\n        <Error\n          code={error}\n          intl={intl}\n        />\n      );\n    }\n\n    if (loaded) {\n      return (\n        <Player\n          data={this.data}\n          intl={intl}\n          layout={this.layout}\n          time={this.time}\n        />\n      );\n    }\n\n    return (\n      <div\n        aria-label={intl.formatMessage(intlMessages.aria)}\n        className=\"loader-wrapper\"\n        id={ID.LOADER}\n      >\n        <div className=\"loading-dots\">\n          <div className=\"first\" />\n          <div className=\"second\" />\n          <div className=\"third\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default injectIntl(Loader);\n","import ar from './ar.json';\nimport de from './de.json';\nimport en from './en.json';\nimport es from './es.json';\nimport fr from './fr.json';\nimport it from './it.json';\nimport ja from './ja.json';\nimport pt from './pt.json';\nimport ru from './ru.json';\n\nexport default {\n  ar,\n  de,\n  en,\n  es,\n  fr,\n  it,\n  ja,\n  pt,\n  ru,\n};\n","import messages from './messages';\n\nconst DEFAULT_LOCALE = 'en';\n\nconst RTL_LOCALES = ['ar'];\n\nconst setDirection = (locale) => {\n  if (RTL_LOCALES.includes(locale)) {\n    document.body.parentNode.setAttribute('dir', 'rtl');\n  } else {\n    document.body.parentNode.setAttribute('dir', 'ltr');\n  }\n};\n\nconst getLocale = () => {\n  const locale = navigator.language.split(/[-_]/)[0];\n\n  setDirection(locale);\n\n  if (!messages[locale]) return DEFAULT_LOCALE;\n\n  return locale;\n};\n\nconst getMessages = () => {\n  return messages;\n};\n\nexport {\n  getLocale,\n  getMessages,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { IntlProvider } from \"react-intl\";\nimport Loader from 'components/loader';\nimport Router from 'components/router';\nimport {\n  getLocale,\n  getMessages,\n} from 'locales';\nimport {\n  LOCAL,\n  getStyle,\n} from 'utils/data';\nimport './index.scss';\n\nconst locale = getLocale();\nconst messages = getMessages();\nconst style = getStyle();\n\nReactDOM.render(\n  (\n    <IntlProvider\n      locale={locale}\n      messages={messages[locale]}\n    >\n      {style ? <link rel=\"stylesheet\" type=\"text/css\" href={style} /> : null}\n      {LOCAL ? <Loader /> : <Router />}\n    </IntlProvider>\n  ),\n  document.getElementById('root')\n);\n"],"sourceRoot":""}